<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mxz.dao.ClientDao">

    <resultMap id="clientMap" type="mxz.entity.Client">
        <id column="uid" property="uid"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="sex" property="sex"/>
        <result column="phone" property="phone"/>
        <result column="birthday" property="birthday"/>
        <result column="create_datetime" property="createDateTime"/>
        <result column="truename" property="trueName"/>
        <result column="ip" property="ip"/>
        <result column="remark" property="remark"/>
    </resultMap>


    <insert id="add">
        insert into client
        values (#{uid}, #{name}, #{password}, #{email}, #{sex}, #{phone}, #{birthday}, #{createDateTime}, #{trueName},
                #{ip}, #{remark})
    </insert>

    <update id="update">
        update client
        <set>
            <if test="name!=null ">
                name=#{name},
            </if>
            <if test="password!=null ">
                password=#{password},
            </if>
            <if test="email!=null">
                email=#{email},
            </if>
            <if test="sex!=null ">
                sex=#{sex},
            </if>
            <if test="phone!=null ">
                phone=#{phone},
            </if>
            <if test="birthday!=null ">
                birtyday=#{birthday},
            </if>
            <if test="trueName!=null ">
                truename=#{trueName},
            </if>
            <if test="ip!=null ">
                ip=#{ip},
            </if>
            <if test="remark!=null ">
                remark=#{remark},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <select id="findByUid" parameterType="String" resultMap="clientMap">
        select *
        from client
        where uid = #{uid}
    </select>

    <delete id="delete" parameterType="String">
        delete
        from client
        where uid = #{uid}
    </delete>

    <select id="findByName" parameterType="String" resultMap="clientMap">
        select *
        from client
        where name = #{name}
    </select>

</mapper>
